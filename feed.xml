<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog abount Linux, Technologies and Life</title>
    <description>In this blog I will describe situations that I meet in my life when working with a variety of technologies. This includes any kind of computer technologies, Open Software, Linux and many more.
</description>
    <link>http://undying.github.io/</link>
    <atom:link href="http://undying.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 30 Oct 2020 07:55:54 +0300</pubDate>
    <lastBuildDate>Fri, 30 Oct 2020 07:55:54 +0300</lastBuildDate>
    <generator>Jekyll v3.8.7</generator>
    
      <item>
        <title>VIM: Handle Urls</title>
        <description>&lt;h1 id=&quot;making-a-shortcut-to-open-urls-under-cursor&quot;&gt;Making a shortcut to open urls under cursor&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;em&gt;There is also available &lt;code class=&quot;highlighter-rouge&quot;&gt;gx&lt;/code&gt; shortcut that uses netrw plugin.
But I’ve decided to use own little solution instead of big plugin for one function.&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-vimscript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&quot;&quot;&quot; open urls using \u shortcut&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; HandleURL&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;uri &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;matchstr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;getline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[a-z]*:\/\/[^ &amp;gt;,;)]*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;uri &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;silent&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xdg-open &quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;shellescape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;uri&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    echo &lt;span class=&quot;s2&quot;&gt;&quot;No URI found in line.&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;endfunction&lt;/span&gt;

nnoremap &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;leader&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; HandleURL&lt;span class=&quot;p&quot;&gt;()&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;cr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now if we hit &lt;code class=&quot;highlighter-rouge&quot;&gt;\u&lt;/code&gt; shortcut while our cursor is on the url line, this url will be opened in default browser.
You may like to change xdg-open to any other program you need.&lt;/p&gt;

</description>
        <pubDate>Thu, 15 Oct 2020 22:32:39 +0300</pubDate>
        <link>http://undying.github.io/2020/10/15/vim-handle-urls.html</link>
        <guid isPermaLink="true">http://undying.github.io/2020/10/15/vim-handle-urls.html</guid>
        
        <category>vim</category>
        
        <category>url</category>
        
        <category>http</category>
        
        
      </item>
    
      <item>
        <title>VIM: Making Markdown Checklist Shortcut</title>
        <description>&lt;p&gt;Interesting exercise to implement shortcut in vim.
Often while writing markdown files in vim I’m writing a lot of checkboxes.
It’s a bit annoying to do by hand so let’s make a script and bind it to shortcut.&lt;/p&gt;

&lt;div class=&quot;language-vimscript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&quot;&quot;&quot; markdown shortcuts&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; MarkdownCheckboxInsert&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;str &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;getline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;matchlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;str&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^\([ ]*\)\?\([-+*]\)\? \?\(.*\)$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;list_syn &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;list_syn &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;buf &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;list_syn &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' [ ] - '&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;setline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;buf&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;endfunction&lt;/span&gt;

nnoremap &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Leader&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;mc &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; MarkdownCheckboxInsert&lt;span class=&quot;p&quot;&gt;()&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;$
&lt;span class=&quot;c&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we can use shortcut &lt;code class=&quot;highlighter-rouge&quot;&gt;\mc&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt; - Markdown&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt; - checkbox&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also point to already existing line or list and this will transform your line to checkbox.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Oct 2020 23:45:53 +0300</pubDate>
        <link>http://undying.github.io/2020/10/14/vim-making-markdown-checklist-shortcut.html</link>
        <guid isPermaLink="true">http://undying.github.io/2020/10/14/vim-making-markdown-checklist-shortcut.html</guid>
        
        <category>vim</category>
        
        <category>markdown</category>
        
        <category>vimscript</category>
        
        
      </item>
    
      <item>
        <title>VIM: YCM and Pipenv</title>
        <description>&lt;p&gt;While writing another python script under pipenv I have met a problem that YCM autocomplete worked only for built in functions.
That was annoying because without autocomplete YCM looses it’s sense.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;Let’s create module for filetype plugin.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; ~/.vim/after/ftplugin/python.vim

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;empty&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VIRTUAL_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;let &lt;/span&gt;g:ycm_server_python_interpreter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$VIRTUAL_ENV&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/bin/python'&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PYTHONPATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; finddir&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'site-packages'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;$VIRTUAL_ENV&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/lib/*'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
endif

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then you can simply run command&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pipenv run vim some/script.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now YCM works correctly :3&lt;/p&gt;

</description>
        <pubDate>Wed, 14 Oct 2020 23:03:02 +0300</pubDate>
        <link>http://undying.github.io/2020/10/14/vim-ycm-and-pipenv.html</link>
        <guid isPermaLink="true">http://undying.github.io/2020/10/14/vim-ycm-and-pipenv.html</guid>
        
        <category>vim</category>
        
        <category>ycm</category>
        
        <category>pipenv</category>
        
        
      </item>
    
      <item>
        <title>ZSH: auto git config.user</title>
        <description>&lt;p&gt;On my laptop and desktop I usually have many git repositories. Some of them are personal and some of them are from my main job. In companies it’s common practice to have corporate email that used in repository configuration.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config user.name &lt;span class=&quot;s2&quot;&gt;&quot;Mr Anderson&quot;&lt;/span&gt;
git config user.email &lt;span class=&quot;s2&quot;&gt;&quot;anderson@corp.in&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In personal repository you may use some cool nickname and personal email.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config user.name &lt;span class=&quot;s2&quot;&gt;&quot;Neo&quot;&lt;/span&gt;
git config user.email &lt;span class=&quot;s2&quot;&gt;&quot;0xff@matr.ix&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But there is an headache to not forget configure every repository to be corporate or personal after cloning.
I’m using zsh and I have found easy solution for this.&lt;/p&gt;

&lt;p&gt;On file system I keep corporate repositories in special folder like &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;company&amp;gt;/repos&lt;/code&gt;.
So I decided to make my default configuration to be personal, and change it in corporate repositories on demand.&lt;/p&gt;

&lt;p&gt;Zsh have a &lt;a href=&quot;http://zsh.sourceforge.net/Doc/Release/Functions.html&quot;&gt;hook system&lt;/a&gt;. You can create a function and specify in which hook you want to call it. There is a hook named chdir, it’s called when you changing your directory.&lt;/p&gt;

&lt;p&gt;The algorithm is simple:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;check that current directory is a git repository&lt;/li&gt;
  &lt;li&gt;if so, check in which directory it’s based&lt;/li&gt;
  &lt;li&gt;if it’s corporate directory - set corporate email and name&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is a functions added to .zsrc:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;_git_config_user&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PWD&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mycompany/repos&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      git config user.email &lt;span class=&quot;s2&quot;&gt;&quot;denis@mycompany.com&quot;&lt;/span&gt;
      git config user.name &lt;span class=&quot;s2&quot;&gt;&quot;Denis Bozhok&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;0
  &lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

__git_cd_functions_set&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; .git &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;0
  _git_config_user
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
chpwd_functions+&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt; __git_cd_functions_set &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Last string appends function &lt;code class=&quot;highlighter-rouge&quot;&gt;__git_cd_functions_set&lt;/code&gt; to chpwd hooks chain:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chpwd_functions+&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt; __git_cd_functions_set &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now any repository placed in directory which path contains &lt;code class=&quot;highlighter-rouge&quot;&gt;mycompany/repos&lt;/code&gt; will be configured to have corporate name and email.&lt;/p&gt;
</description>
        <pubDate>Thu, 25 Jun 2020 22:36:59 +0300</pubDate>
        <link>http://undying.github.io/2020/06/25/zsh-auto-git-config.user.html</link>
        <guid isPermaLink="true">http://undying.github.io/2020/06/25/zsh-auto-git-config.user.html</guid>
        
        <category>zsh</category>
        
        <category>git</category>
        
        
      </item>
    
      <item>
        <title>Network: Capturing TCP Retransmissions</title>
        <description>&lt;p&gt;When server have a lot network connections it’s not rare to see tcp retransmissions. The permanent background retransmissions it’s even normal situation if it’s not abnormally high.&lt;/p&gt;

&lt;p&gt;But when the charts shows abnormally jump of retransmissions it’s good to find the reason.&lt;/p&gt;

&lt;p&gt;The reason is may be:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;server is overloaded&lt;/li&gt;
  &lt;li&gt;remote server is overloaded&lt;/li&gt;
  &lt;li&gt;network where servers is based is degraded&lt;/li&gt;
  &lt;li&gt;network of remote endpoint is degraded&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When servers is not overloaded the next step is to find which endpoint causes the retransmissions. We can see this in multiple ways described below.&lt;/p&gt;

&lt;h3 id=&quot;netstat&quot;&gt;&lt;a href=&quot;https://linux.die.net/man/8/netstat&quot;&gt;Netstat&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;To begin with it makes sense to collect statistics on retransmited packages. Netstat can help with that.
Compare total segments count with retransmited.
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;|grep segments
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tshark&quot;&gt;&lt;a href=&quot;https://www.wireshark.org/docs/man-pages/tshark.html&quot;&gt;TShark&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Realtime output with source and destination
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tshark &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; tcp.analysis.retransmission
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Capture result into pcap file
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tshark &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; any &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /tmp/result.pcap &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; tcp.analysis.retransmission
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Collecting data and displaying statistics after the CTRL-C
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tshark &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; io,stat,1,&lt;span class=&quot;s2&quot;&gt;&quot;COUNT(tcp.analysis.retransmission) tcp.analysis.retransmission&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Use more columns in statistics.
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tshark &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; io,stat,1,&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;COUNT(tcp.analysis.fast_retransmission) tcp.analysis.fast_retransmission&quot;&lt;/span&gt;,&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;COUNT(tcp.analysis.retransmission) tcp.analysis.retransmission&quot;&lt;/span&gt;,&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;COUNT(tcp.analysis.duplicate_ack) tcp.analysis.duplicate_ack&quot;&lt;/span&gt;,&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;COUNT(tcp.analysis.lost_segment) tcp.analysis.lost_segment&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;perf-tools&quot;&gt;&lt;a href=&quot;https://github.com/brendangregg/perf-tools&quot;&gt;Perf-Tools&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;perf-tools has great tool named &lt;a href=&quot;https://github.com/brendangregg/perf-tools/blob/master/net/tcpretrans&quot;&gt;tcpretrans&lt;/a&gt;.
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./tcpretrans
TIME     PID    LADDR:LPORT          &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; RADDR:RPORT          STATE
05:16:44 3375   10.150.18.225:53874  R&amp;gt; 10.105.152.3:6001    ESTABLISHED
05:16:44 3375   10.150.18.225:53874  R&amp;gt; 10.105.152.3:6001    ESTABLISHED
05:16:54 4028   10.150.18.225:6002   R&amp;gt; 10.150.30.249:1710   ESTABLISHED
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 20 Jun 2020 16:04:35 +0300</pubDate>
        <link>http://undying.github.io/2020/06/20/capturing-tcp-retransmissions.html</link>
        <guid isPermaLink="true">http://undying.github.io/2020/06/20/capturing-tcp-retransmissions.html</guid>
        
        <category>linux</category>
        
        <category>network</category>
        
        <category>tcp</category>
        
        
      </item>
    
      <item>
        <title>VIM: Append Filetype</title>
        <description>&lt;p&gt;If you open a file with a non-standard extension, syntax highlighting will not work. This is easily solved by installing filetype manually.&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;filetype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;markdown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can add a hint for VIM about the file type to the file so that you don’t have to set the type manually the next time.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~ &lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;Readme
&lt;span class=&quot;c&quot;&gt;# vi:syntax=markdown&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I wanted to make a hotkey to add information about its type to the end of the file. So I wrote a short function for this and mapped key &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;F2&amp;gt;&lt;/code&gt; for it.&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&quot;&quot;&quot; insert current filetype at the end of a file&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; FileWriteSyntax&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'# vi:syntax='&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &amp;amp;&lt;span class=&quot;k&quot;&gt;filetype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;endfunction&lt;/span&gt;

nnoremap &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;F2&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; FileWriteSyntax&lt;span class=&quot;p&quot;&gt;()&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now pressing F2 will append current filetype at the end of the file.&lt;/p&gt;

</description>
        <pubDate>Sat, 06 Jun 2020 22:47:03 +0300</pubDate>
        <link>http://undying.github.io/2020/06/06/vim-append-filetype.html</link>
        <guid isPermaLink="true">http://undying.github.io/2020/06/06/vim-append-filetype.html</guid>
        
        <category>vim</category>
        
        
      </item>
    
      <item>
        <title>VIM: File Autosave</title>
        <description>&lt;p&gt;I was wondering how to save file in VIM automatically. Found some solutions in internet but decided to do it my way.
So I wrote this small solution:&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&quot;&quot;&quot; Save file on each edit exit&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; FileAutoSave&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'g:file_autosave_async'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; @% &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;elseif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;filewritable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;@%&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;


  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;g:file_autosave_async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;timer_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'FileAutoSaveAsync'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'repeat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;endfunction&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; FileAutoSaveAsync&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;timer&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;update&lt;/span&gt;
  unlet &lt;span class=&quot;nv&quot;&gt;g:file_autosave_async&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;endfunction&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;autocmd &lt;span class=&quot;nb&quot;&gt;InsertLeave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;TextChanged&lt;/span&gt; * &lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; FileAutoSave&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It updates file in two cases:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;when you leave insert mode&lt;/li&gt;
  &lt;li&gt;when text in buffer have been changed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Event “TextChanged” can be triggered too often, that’s why I decided to use VIM 8 feature &lt;a href=&quot;https://vimhelp.org/eval.txt.html#timer_start%28%29&quot;&gt;timer_start()&lt;/a&gt;.
After edit event timer will be triggered and file will be saved with delay of 500ms.
This solution will prevent to trigger update too often and will save after every buffer change.&lt;/p&gt;

</description>
        <pubDate>Tue, 02 Jun 2020 00:10:12 +0300</pubDate>
        <link>http://undying.github.io/2020/06/02/vim-file-autosave.html</link>
        <guid isPermaLink="true">http://undying.github.io/2020/06/02/vim-file-autosave.html</guid>
        
        <category>vim</category>
        
        
      </item>
    
      <item>
        <title>Route 53 Resolver: NXDOMAIN|SERVFAIL</title>
        <description>&lt;p&gt;What we have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On premises data center with own domain zone (domain.local) and dns servers&lt;/li&gt;
  &lt;li&gt;AWS VPC with it’s own domain zone (domain.r53) and using Route 53 as DNS Server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What we need:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ability to resolve domain zone hosted on premises DNS Servers from AWS VPC&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;mermaid&quot;&gt;graph LR
  A[EC2 Instance] --&amp;gt;|a.domain.local| B[Route 53 Forward] --&amp;gt;|a.domain.local| C[DNS On Premises]&lt;/div&gt;

&lt;p&gt;The configuration is straightforward and well described in &lt;a href=&quot;https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver.html&quot;&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You simply create rules:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;what domain this rule for&lt;/li&gt;
  &lt;li&gt;where forward requests to&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But there is a problem. When you are trying to resolve domain that points to CNAME you can get a timeout.
When investigating traffic you can find the following errors:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;18:32:21.328494 IP 10.0.0.2.domain &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 192.168.1.10.33414: 57918 NXDomain 0/0/0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;68&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
18:32:22.127343 IP 10.0.0.2.domain &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 192.168.1.10.46394: 31940 ServFail 0/0/0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;38&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is because when dealing with CNAME server makes multiple requests.
And if there is no rules for CNAME requests will go to the internet resolvers.&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;graph LR
  A[EC2 Instance] --&amp;gt;|a.domain.local| B[Route 53] --&amp;gt;|a.domain.local| C[DNS On Premises]
  C --&amp;gt; |CNAME x.domain.local| B&lt;/div&gt;

&lt;div class=&quot;mermaid&quot;&gt;graph LR
  A[EC2 Instance] --&amp;gt;|a.domain.local| B[Route 53] --&amp;gt;|x.domain.local| C[Internet]
  C --&amp;gt;|NXDOMAIN| B
  B --&amp;gt;|NXDOMAIN| A&lt;/div&gt;

&lt;p&gt;To fix errors we need create R53 Forward Rules for CNAME domains as well.&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;graph LR
  A[EC2 Instance] --&amp;gt;|a.domain.local| B[R53 Forward] --&amp;gt;|a.domain.local| C[DNS On Premises]
  C[DNS On Premises] --&amp;gt;|CNAME x.domain.local| B[R53 Forward]&lt;/div&gt;

&lt;div class=&quot;mermaid&quot;&gt;graph LR
  A[EC2 Instance] --&amp;gt;|a.domain.local| B[R53 Forward] --&amp;gt;|x.domain.local| C[DNS On Premises]
  C --&amp;gt;|A 192.168.1.200| B
  B --&amp;gt;|A 192.168.1.200| A&lt;/div&gt;

</description>
        <pubDate>Fri, 29 May 2020 11:24:01 +0300</pubDate>
        <link>http://undying.github.io/2020/05/29/route-53-resolver-servfail.html</link>
        <guid isPermaLink="true">http://undying.github.io/2020/05/29/route-53-resolver-servfail.html</guid>
        
        <category>aws</category>
        
        <category>dns</category>
        
        
      </item>
    
      <item>
        <title>PostgreSQL 11 Administration Summary</title>
        <description>&lt;!-- vim-markdown-toc Marked --&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#postgresql-administration-cheatsheet&quot;&gt;PostgreSQL Administration Cheatsheet&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#intro&quot;&gt;Intro&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#new-in-postgresql-11&quot;&gt;New In PostgreSQL 11&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#wal-size&quot;&gt;WAL Size&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#create-statistics&quot;&gt;CREATE STATISTICS&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#include-indexes&quot;&gt;INCLUDE indexes&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#create-index-in-parallel&quot;&gt;CREATE INDEX in parallel&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#pg_prewarm&quot;&gt;pg_prewarm&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#updated-window-functions&quot;&gt;Updated WINDOW Functions&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#jit-compilation&quot;&gt;JIT Compilation&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#better-partitioning&quot;&gt;Better Partitioning&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#default-partition&quot;&gt;Default Partition&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#partition-key-updating&quot;&gt;Partition Key Updating&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#hash-partitioning&quot;&gt;Hash Partitioning&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#index-created-on-parent-table&quot;&gt;Index Created on Parent Table&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#better-support-of-stored-procedures&quot;&gt;Better Support Of Stored Procedures&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#faster-alter-table&quot;&gt;Faster ALTER TABLE&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#locks-and-transactions&quot;&gt;Locks and Transactions&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#now()-function&quot;&gt;now() function&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#savepoint&quot;&gt;SAVEPOINT&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ddl-commands-are-transaction-safe&quot;&gt;DDL commands are transaction safe&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#using-cte-with-returning&quot;&gt;Using CTE with RETURNING&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#for-share-and-for-update&quot;&gt;FOR SHARE and FOR UPDATE&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#for-...-clauses-by-locking-strength&quot;&gt;FOR … clauses by locking strength&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#for-update-skip-locked&quot;&gt;FOR UPDATE SKIP LOCKED&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#recommended-locks&quot;&gt;Recommended Locks&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vacuum&quot;&gt;VACUUM&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#autovacuum&quot;&gt;autovacuum&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#transaction-id-wraparound&quot;&gt;Transaction ID Wraparound&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#transaction-duration&quot;&gt;Transaction Duration&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#indexing&quot;&gt;Indexing&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#costs-model&quot;&gt;Costs Model&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- vim-markdown-toc --&gt;

&lt;h1 id=&quot;postgresql-administration-cheatsheet&quot;&gt;PostgreSQL Administration Cheatsheet&lt;/h1&gt;

&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;

&lt;p&gt;This cheatsheet is based on the great
&lt;a href=&quot;https://www.packtpub.com/product/mastering-postgresql-11-second-edition/9781789537819&quot;&gt;book about PostgreSQL 11 Administration&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Big thanks to it’s author - Hans-Jürgen Schönig.&lt;/p&gt;

&lt;h2 id=&quot;new-in-postgresql-11&quot;&gt;New In PostgreSQL 11&lt;/h2&gt;

&lt;h3 id=&quot;wal-size&quot;&gt;WAL Size&lt;/h3&gt;

&lt;p&gt;Default WAL size is: &lt;strong&gt;16M&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To change size during setup: &lt;code class=&quot;highlighter-rouge&quot;&gt;initdb -D /pgdata --wal-segsize=32&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;create-statistics&quot;&gt;CREATE STATISTICS&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;This actually from PostgreSQL 10.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;CREATE STATISTICS will create a new extended statistics object tracking data about the specified table, foreign table or materialized view. The statistics object will be created in the current database and will be owned by the user issuing the command.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The great thing is that statistics collected by every column you need.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/10/sql-createstatistics.html&quot;&gt;CREATE STATISTICS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.citusdata.com/blog/2018/03/06/postgres-planner-and-its-usage-of-statistics/&quot;&gt;The Postgres 10 feature you didn’t know about: CREATE STATISTICS &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;include-indexes&quot;&gt;INCLUDE indexes&lt;/h3&gt;

&lt;p&gt;In addition to the indexed column, the index can contain an additional column.
This can be useful to avoid table scan and use only index scan.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE UNIQUE INDEX some_name ON person USING btree (id) INCLUDE (name);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note: Always select only those columns you need. When using &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT *&lt;/code&gt; you gathering all data from table and that hurts your performance.&lt;/p&gt;

&lt;h3 id=&quot;create-index-in-parallel&quot;&gt;CREATE INDEX in parallel&lt;/h3&gt;

&lt;p&gt;PostgreSQL can build indexes while leveraging multiple CPUs in order to process the table rows faster. This feature is known as parallel index build. For index methods that support building indexes in parallel (currently, only B-tree), &lt;a href=&quot;https://www.postgresql.org/docs/11/runtime-config-resource.html#GUC-MAINTENANCE-WORK-MEM&quot;&gt;maintenance_work_mem&lt;/a&gt; specifies the maximum amount of memory that can be used by each index build operation as a whole, regardless of how many worker processes were started. Generally, a cost model automatically determines how many worker processes should be requested, if any.&lt;/p&gt;

&lt;p&gt;Parallel index builds may benefit from increasing maintenance_work_mem where an equivalent serial index build will see little or no benefit. Note that maintenance_work_mem may influence the number of worker processes requested, since parallel workers must have at least a 32MB share of the total maintenance_work_mem budget. There must also be a remaining 32MB share for the leader process. Increasing &lt;a href=&quot;https://www.postgresql.org/docs/11/runtime-config-resource.html#GUC-MAX-PARALLEL-WORKERS-MAINTENANCE&quot;&gt;max_parallel_maintenance_workers&lt;/a&gt; may allow more workers to be used, which will reduce the time needed for index creation, so long as the index build is not already I/O bound. Of course, there should also be sufficient CPU capacity that would otherwise lie idle.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/11/sql-createindex.html&quot;&gt;CREATE INDEX&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cybertec-postgresql.com/en/postgresql-parallel-create-index-for-better-performance/&quot;&gt;PostgreSQL: Parallel CREATE INDEX for better performance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pg_prewarm&quot;&gt;pg_prewarm&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;CREATE EXTENSION pg_prewarm;
SELECT pg_prewarm('tablename');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cybertec-postgresql.com/en/prewarming-postgresql-i-o-caches/&quot;&gt;Prewarming PostgreSQL I/O caches&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;updated-window-functions&quot;&gt;Updated WINDOW Functions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresqltutorial.com/postgresql-between/&quot;&gt;RANGE BETWEEN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;EXCLUDE
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EXCLUDE CURRENT ROW&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EXCLUDE TIES&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cybertec-postgresql.com/en/timeseries-exclude-ties-current-row-and-group/&quot;&gt;Timeseries: EXCLUDE TIES, CURRENT ROW and GROUP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/11/tutorial-window.html&quot;&gt;Window Functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jit-compilation&quot;&gt;JIT Compilation&lt;/h3&gt;

&lt;p&gt;Just-in-Time (JIT) compilation is the process of turning some form of interpreted program evaluation into a native program, and doing so at run time. For example, instead of using general-purpose code that can evaluate arbitrary SQL expressions to evaluate a particular SQL predicate like WHERE a.col = 3, it is possible to generate a function that is specific to that expression and can be natively executed by the CPU, yielding a speedup.&lt;/p&gt;

&lt;p&gt;PostgreSQL has builtin support to perform JIT compilation using LLVM when PostgreSQL is built with –with-llvm.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/11/jit-reason.html&quot;&gt;JIT Reason&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;better-partitioning&quot;&gt;Better Partitioning&lt;/h3&gt;

&lt;h4 id=&quot;default-partition&quot;&gt;Default Partition&lt;/h4&gt;

&lt;p&gt;If row does not match any partition already created, it’s now can be moved to the default partition.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default_part&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;another_table&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;partition-key-updating&quot;&gt;Partition Key Updating&lt;/h4&gt;

&lt;p&gt;Now when updating the value of partition key, row is moved to another partition by PostgreSQL automatically.&lt;/p&gt;

&lt;h4 id=&quot;hash-partitioning&quot;&gt;Hash Partitioning&lt;/h4&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HASH&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tab_0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tab&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MODULUS&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REMAINDER&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;index-created-on-parent-table&quot;&gt;Index Created on Parent Table&lt;/h4&gt;

&lt;p&gt;Now when creating index on parent table it automatically created on all child`s tables.
Also, creating “global” unique index on parent table creates unique index on all child`s table.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://severalnines.com/database-blog/guide-partitioning-data-postgresql&quot;&gt;A Guide to Partitioning Data In PostgreSQL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://severalnines.com/database-blog/how-take-advantage-new-partitioning-features-postgresql-11&quot;&gt;How to Take Advantage of the New Partitioning Features in PostgreSQL 11&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/11/ddl-partitioning.html&quot;&gt;Table Partitioning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;better-support-of-stored-procedures&quot;&gt;Better Support Of Stored Procedures&lt;/h3&gt;

&lt;p&gt;Main difference between functions ans procedures in PostgreSQL is that function is a part of transaction.
But procedure may contain multiple transactions.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PROCEDURE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_proc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;LANGUAGE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plpgsql&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$$&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;faster-alter-table&quot;&gt;Faster ALTER TABLE&lt;/h3&gt;

&lt;p&gt;To add a column to the table we can use such command:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ADD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COLUMN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ADD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COLUMN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;57&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;First command will work fast always, because it simply updates system catalog.
Second command will work fast only in PostgreSQL 11 and newer versions.
In the PG10 this will lead table to be rewritten which may be slow.&lt;/p&gt;

&lt;h2 id=&quot;locks-and-transactions&quot;&gt;Locks and Transactions&lt;/h2&gt;

&lt;h3 id=&quot;now-function&quot;&gt;now() function&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;now()&lt;/code&gt; function returns time of the transaction beginning. So calling it twice in one transaction will return the same data. If you need the real time, you have to use function &lt;code class=&quot;highlighter-rouge&quot;&gt;clock_timestamp()&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;savepoint&quot;&gt;&lt;a href=&quot;https://www.postgresql.org/docs/11/sql-savepoint.html&quot;&gt;SAVEPOINT&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;In long transaction which may fail in the middle of process it’s possible to use savepoint and rollback to it saving the job that already completed successfully.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;----------&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SAVEPOINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SAVEPOINT&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;division&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transaction&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aborted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ignored&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transaction&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SAVEPOINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;----------&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ddl-commands-are-transaction-safe&quot;&gt;DDL commands are transaction safe&lt;/h3&gt;

&lt;p&gt;It’s possible to create and modify tables in transaction then rollback all changes during error.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;You&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;test&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;postgres&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Did&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;relations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_test&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COLUMN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TYPE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;Table&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;public.t_test&quot;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;Column&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;Type&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Collation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Nullable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Default&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;--------+--------+-----------+----------+---------&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bigint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Did&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;relations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;using-cte-with-returning&quot;&gt;Using CTE with RETURNING&lt;/h3&gt;

&lt;p&gt;When you need to update record and use result value and don’t want to use explicit blocking or long transaction, it’s possible to use CTE and UPDATE with RETURNING statement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_order&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_room&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_room&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_room&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RETURNING&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_order&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RETURNING&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;____&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;for-share-and-for-update&quot;&gt;FOR SHARE and FOR UPDATE&lt;/h3&gt;

&lt;p&gt;To select some data for database, process it and then update this data in database there is a SELECT FOR UPDATE  statement for that.&lt;/p&gt;

&lt;h4 id=&quot;for--clauses-by-locking-strength&quot;&gt;FOR … clauses by locking strength&lt;/h4&gt;

&lt;p&gt;The locking clause has general form:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock_strength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOWAIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SKIP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOCKED&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where &lt;em&gt;lock_strength&lt;/em&gt; can be one of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;UPDATE&lt;/strong&gt; (when we definitely want to update record, most strong lock)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;NO KEY UPDATE&lt;/strong&gt; (the lock is weaker and can coexist with &lt;strong&gt;SELECT FOR SHARE&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;SHARE&lt;/strong&gt; (this type lock can be handled by multiple transactions)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;KEY SHARE&lt;/strong&gt; (like &lt;strong&gt;SHARE&lt;/strong&gt; lock but weaker. this lock conflicts with &lt;strong&gt;FOR UPDATE&lt;/strong&gt; but can coexist with &lt;strong&gt;FOR NO KEY UPDATE&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See more details &lt;a href=&quot;https://www.postgresql.org/docs/11/sql-select.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;for-update-skip-locked&quot;&gt;FOR UPDATE SKIP LOCKED&lt;/h4&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_room&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate_series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Transaction 1&lt;/th&gt;
      &lt;th&gt;Transaction 2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BEGIN;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BEGIN;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM t_room LIMIT 2 FOR UPDATE SKIP LOCKED;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM t_room LIMIT 2 FOR UPDATE SKIP LOCKED;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;# &lt;strong&gt;returns 1, 2&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;# &lt;strong&gt;returns 3, 4&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This only works well if there is no &lt;a href=&quot;https://www.postgresqltutorial.com/postgresql-foreign-key/&quot;&gt;REFERENCES&lt;/a&gt; in the table. If table have &lt;a href=&quot;https://www.postgresqltutorial.com/postgresql-foreign-key/&quot;&gt;REFERENCES&lt;/a&gt; second transaction with UPDATE will be blocked till first transaction will end.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;recommended-locks&quot;&gt;Recommended Locks&lt;/h3&gt;

&lt;p&gt;It’s possible to use locks for applications synchronization.
In this case you lock not rows but numbers instead.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Transaction 1&lt;/th&gt;
      &lt;th&gt;Transaction 2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BEGIN;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT pg_advisory_lock(15);&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT pg_advisory_lock(15);&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;waiting for lock…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;waiting for lock…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;COMMIT;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;waiting for lock…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT pg_advisory_unlock(15);&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;waiting for lock…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;lock granted!&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Handy functions:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pg_advisory_unlock_all()&lt;/code&gt; - unlock all previous locks&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pg_try_advisory_lock()&lt;/code&gt; - get lock if possible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More details in &lt;a href=&quot;https://www.postgresql.org/docs/11/functions-admin.html&quot;&gt;documentation&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;vacuum&quot;&gt;VACUUM&lt;/h2&gt;
&lt;h3 id=&quot;autovacuum&quot;&gt;autovacuum&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.postgresql.org/docs/11/runtime-config-autovacuum.html&quot;&gt;Options&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;autovacuum_naptime&lt;/strong&gt;: Specifies the minimum delay between autovacuum runs on any given database. The delay is measured in seconds, and the default is one minute (1min).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;autovacuum_vacuum_threshold&lt;/strong&gt;: Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;autovacuum_analyze_threshold&lt;/strong&gt;: Specifies the minimum number of inserted, updated or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;autovacuum_vacuum_scale_factor&lt;/strong&gt;: Specifies a fraction of the table size to add to autovacuum_vacuum_threshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;autovacuum_analyze_scale_factor&lt;/strong&gt;: Specifies a fraction of the table size to add to autovacuum_analyze_threshold when deciding whether to trigger an ANALYZE. The default is 0.1 (10% of table size).&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;transaction-id-wraparound&quot;&gt;Transaction ID Wraparound&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.postgresql.org/docs/11/runtime-config-autovacuum.html&quot;&gt;Options&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;autovacuum_freeze_max_age&lt;/strong&gt;: Specifies the maximum age (in transactions) that a table’s pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;autovacuum_multixact_freeze_max_age&lt;/strong&gt;: Specifies the maximum age (in multixacts) that a table’s pg_class.relminmxid field can attain before a VACUUM operation is forced to prevent multixact ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Wraparound References:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;https://www.postgresql.org/docs/11/routine-vacuuming.html#VACUUM-FOR-WRAPAROUND&lt;/li&gt;
  &lt;li&gt;https://www.cybertec-postgresql.com/en/autovacuum-wraparound-protection-in-postgresql/&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;transaction-duration&quot;&gt;Transaction Duration&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;old_snapshot_threshold&lt;/strong&gt;: Sets the minimum time that a snapshot can be used without risk of a snapshot too old error occurring when using the snapshot. This parameter can only be set at server start.&lt;/p&gt;

&lt;p&gt;Beyond the threshold, old data may be vacuumed away. This can help prevent bloat in the face of snapshots which remain in use for a long time. To prevent incorrect results due to cleanup of data which would otherwise be visible to the snapshot, an error is generated when the snapshot is older than this threshold and the snapshot is used to read a page which has been modified since the snapshot was built. &lt;a href=&quot;https://www.postgresql.org/docs/11/runtime-config-resource.html#GUC-OLD-SNAPSHOT-THRESHOLD&quot;&gt;More details&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;indexing&quot;&gt;Indexing&lt;/h2&gt;

&lt;h3 id=&quot;costs-model&quot;&gt;Costs Model&lt;/h3&gt;

&lt;p&gt;Costs formula for &lt;code class=&quot;highlighter-rouge&quot;&gt;Seq Scan&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(blocks to read * seq_page_cost) \
  + (rows scanned * cpu_tuple_cost + rows scanned * cpu_operator_cost)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To get sum of block per table:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_relation_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'table_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8192&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Useful &lt;a href=&quot;https://www.postgresql.org/docs/11/runtime-config-query.html&quot;&gt;options&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/11/runtime-config-query.html#GUC-RANDOM-PAGE-COST&quot;&gt;random_page_cost&lt;/a&gt;: Sets the planner’s estimate of the cost of a non-sequentially-fetched disk page. The default is 4.0.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/11/runtime-config-query.html#GUC-CPU-INDEX-TUPLE-COST&quot;&gt;cpu_index_tuple_cost&lt;/a&gt;: Sets the planner’s estimate of the cost of processing each index entry during an index scan. The default is 0.005.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For parallel jobs:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/11/runtime-config-query.html#GUC-PARALLEL-TUPLE-COST&quot;&gt;parallel_tuple_cost&lt;/a&gt;: Sets the planner’s estimate of the cost of transferring one tuple from a parallel worker process to another process. The default is 0.1.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/11/runtime-config-query.html#GUC-PARALLEL-SETUP-COST&quot;&gt;parallel_setup_cost&lt;/a&gt;: Sets the planner’s estimate of the cost of launching parallel worker processes. The default is 1000.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/11/runtime-config-query.html#GUC-MIN-PARALLEL-TABLE-SCAN-SIZE&quot;&gt;min_parallel_table_scan_size&lt;/a&gt;: Sets the minimum amount of table data that must be scanned in order for a parallel scan to be considered. The default is 8 megabytes (8MB).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/11/runtime-config-query.html#GUC-MIN-PARALLEL-INDEX-SCAN-SIZE&quot;&gt;min_parallel_index_scan_size&lt;/a&gt;: Sets the minimum amount of index data that must be scanned in order for a parallel scan to be considered. The default is 512 kilobytes (512kB).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://www.postgresql.org/docs/11/runtime-config-query.html&lt;/li&gt;
  &lt;li&gt;https://www.postgresql.org/docs/11/index-cost-estimation.html&lt;/li&gt;
&lt;/ul&gt;

&lt;style&gt;
table{
  border-collapse: collapse;
  border-spacing: 0;
  border:2px solid #000000;
}

th{
  border:2px solid #000000;
}

td{
  border:1px solid #000000;
}
&lt;/style&gt;

</description>
        <pubDate>Fri, 22 May 2020 09:48:49 +0300</pubDate>
        <link>http://undying.github.io/2020/05/22/postgresql-11-administration-summary.html</link>
        <guid isPermaLink="true">http://undying.github.io/2020/05/22/postgresql-11-administration-summary.html</guid>
        
        <category>postgresql</category>
        
        <category>cheatsheet</category>
        
        
      </item>
    
      <item>
        <title>Fixing cyrillic symbols in KDE Konsole</title>
        <description>&lt;p&gt;После очередной переустановки системы, вернее после установки ради интереса новой системы, в терминале Konsole возникли проблемы с кириллицей.
Что характерно, в виртуальных терминалах (tty1-7) с кодировкой проблем не было, а значит системные шрифты были настроены верно.&lt;/p&gt;

&lt;p&gt;Знатно покопавшись в сетях нашел &lt;a href=&quot;https://gentoo.ru/node/29037#comment-215877&quot;&gt;древний пост&lt;/a&gt; на эту тему.
Попробовал выставить &lt;code class=&quot;highlighter-rouge&quot;&gt;LC_ALL=en_US.utf8&lt;/code&gt; и запустить konsole, чудо произошло. Осталось сделать это красиво.&lt;/p&gt;

&lt;p&gt;А красиво можно запилить двумя путями:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;глобально закинув определение переменной куда-нибудь сюда /etc/profile.d&lt;/li&gt;
  &lt;li&gt;сделать изменения для профиля&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Т.к. системой пользуюсь только я, то мне второй вариант больше понравился.
Делаем такой небольшой файл:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; ~/.config/plasma-workspace/env/locale.sh

&lt;span class=&quot;c&quot;&gt;#! /bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LC_ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;en_US.utf8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;После перелогина проблема должна исчезнуть.&lt;/p&gt;

</description>
        <pubDate>Fri, 08 May 2020 19:19:00 +0300</pubDate>
        <link>http://undying.github.io/2020/05/08/cyrillic-symbols-in-konsole.html</link>
        <guid isPermaLink="true">http://undying.github.io/2020/05/08/cyrillic-symbols-in-konsole.html</guid>
        
        <category>cyrillic</category>
        
        <category>encoding</category>
        
        <category>locale</category>
        
        <category>kde</category>
        
        <category>plasma</category>
        
        <category>konsole</category>
        
        <category>terminal</category>
        
        
      </item>
    
  </channel>
</rss>
